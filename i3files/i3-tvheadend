#!/bin/bash
#
# STB class media player for a tvheadend client.
#


#
# Convert a "ltvheadend link command" into omxplayer format.
#
tvh2omx ()
{
    # Strip the tag that identified the command unconditionally.
    link=$(basename "${1/:tvhplay:/}")
    # Convert a channel name link to a hex id link.
    # In Firefox, saving a channel creates a playlist.
    # The hex id here is the name of the playlist file.
    link=$(grep "$1" ~/Videos/tvheadend-playlist-slash-channels.m3u | awk -F \" '{print $2}')
    echo "${link}"
}

#
# Play a TVHeadend stream.
#
# - Platform used to test: Raspberry Pi Zero W (Broadcom GPU)
# - Usage example: i3-wrapper :tvhplay:channel_4_hd
#
tvhplay ()
{
    # Hardcoded hostname, hardcoded IP address, change to suit your
    # server and client, use either format.
    client='siro'
    server='192.168.1.33'
    # Saving a stream in tvheadend creates a file whose name can
    # be used as a link, no need to grep the file contents.
    link=$(tvh2omx "$@")
    # Singleton.
    ssh "${client}" pkill -f omxplayer.bin
    # shellcheck disable=2029
    ssh "${client}" omxplayer --live --refresh  --hdmiclocksync \
        --audio_queue 20 --video_queue 80 --timeout 5 \
        "http://${server}:9981/stream/channel/${link}" &
    # ^^^ The 2nd and 3rd omxplayer parameters seem to have fixed a
    # problem where the video became corrupt after about half-an-hour.
}

#
# Start here.
#

tvhplay "$@"

#
# Done
#
