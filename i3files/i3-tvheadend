#!/bin/bash
#
# STB class media player for a tvheadend client.
#


#
# Convert a "ltvheadend link command" into omxplayer format.
#
tvh2omx ()
{
    # Strip the tag that identified the command unconditionally.
    link=$(basename "${1/:tvhplay:/}")
    # Convert a channel name link to a hex id link.
    # In Firefox, saving a channel creates a playlist.
    # The hex id here is the name of the playlist file.
    #
    # EXAMPLE, YMMV:
    # Some HD channels in the UK plus an SD channel.
    case "${link}" in
        (bbc?one?hd)
        link=fa9e3e4a56734e4e944215d4900d231e ;;
        (bbc?two?hd)
        link=4997718f5f51b7e4cef540692c3d557b ;;
        (itv?hd)
        link=66be15a254ee858a4dc8087fcaf0c983 ;;
        (channel?4?hd)
        link=63b5fd9b117dc5ebf0133a0be7e7659b ;;
        (channel?5?hd)
        link=6aa3836df35ca01fc2560e23a33c8563 ;;
        (4seven?hd)
        link=6bf95906c9b58a2be1f8f17c5e555e1b ;;
        (dave)
        link=33c575b002e6ddaa465cfbc049c77414 ;;
    esac
    echo "${link}"
}

#
# Play a TVHeadend stream.
#
# - Platform used to test: Raspberry Pi Zero W (Broadcom GPU)
# - Usage example: i3-wrapper :tvhplay:channel_4_hd
#
tvhplay ()
{
    # Hardcoded hostname, hardcoded IP address, change to suit your
    # server and client, use either format.
    client='siro'
    server='192.168.1.33'
    # Saving a stream in tvheadend creates a file whose name can
    # be used as a link, no need to grep the file contents.
    link=$(tvh2omx "$@")
    # Singleton.
    ssh "${client}" pkill -f omxplayer.bin
    # shellcheck disable=2029
    ssh "${client}" omxplayer --live --refresh  --hdmiclocksync \
        --audio_queue 20 --video_queue 80 --timeout 5 \
        "http://${server}:9981/stream/channel/${link}" &
    # ^^^ The 2nd and 3rd omxplayer parameters seem to have fixed a
    # problem where the video became corrupt after about half-an-hour.
}

#
# Start here.
#

tvhplay "$@"

#
# done
#
