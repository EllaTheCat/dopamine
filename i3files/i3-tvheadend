#!/bin/bash
#
# STB class media player for a tvheadend client.
#
# - :tvhplay:                             # Blank/Disable the HDMI.
# - :tvhplay:none                     # Unblank/Enable the HDMI.
# - :tvhplay:channelname        # Stream the live channel
#


#
# Play a TVHeadend stream.
#
# - Platform used to test: Raspberry Pi Zero W (Broadcom GPU)
#
tvhplay ()
{
    # Hardcoded hostname, hardcoded IP address, change to suit your
    # server and client, use either format.
    client='siro'
    server='192.168.1.33'
    # shellcheck disable=2001
    link="$(echo "$@" | sed 's/:tvhplay://g')"
    # Passing only the command prefix blanks the display. This can be
    # used to trigger (Benq) HDMI/DVI monitor input switching.
    if [ -z "${link}" ]; then
        ssh "${client}" vcgencmd display_power 0
    else
        # Hardcoded path.
        # shellcheck disable=2002
        link=$(cat "${HOME}/Videos/tvheadend-playlist-slash-channels.m3u" | \
                      grep -i "${link}" | awk -F \" '{print $2}' | head -1)
        # RPI hardware supports but one instance of the player.
        ssh "${client}" pkill -c -f omxplayer.bin
        ssh "${client}" vcgencmd display_power 1
        # Passing e.g. 'none' as the channel name stops playback and
        # unblanks the display as for a recognised channel name.
        if [ -n "${link}" ]; then
            # shellcheck disable=2029
            ssh "${client}" omxplayer --live --refresh  --hdmiclocksync \
                --audio_queue 20 --video_queue 80 --timeout 5 \
                "http://${server}:9981/stream/channel/${link}" > /dev/null 2>&1
        fi
    fi
}

#
# Start here.
#
tvhplay "$@"


#
# Done
#
