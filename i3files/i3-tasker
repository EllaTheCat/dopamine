#!/bin/bash
#

#
# Switch to the AutoVoice workspace, populate where necessary.
#
# Here, the user can monitor the speech-to-text results and manage the
# options for the Chrome AutoVoice extension.
#
i3_autovoice_workspace ()
{
    names=$(i3-msg -t get_tree | sed s/,/,\\n/g | grep name)
    str0="Emacs : AutoVoice"
    str1="AutoVoice Options - Google Chrome"
    count0="$(echo "${names}" | grep -c "${str0}")"
    count1="$(echo "${names}" | grep -c "${str1}")"

    if  [  "$count0" -eq 1 ] && [  "$count1" -eq 1 ]; then
        i3-msg "workspace av"
    else
        i3-msg "workspace av"
        sleep 1

        if [ "$count0" -eq 0 ]; then
            # https://emacs.stackexchange.com/questions/3463/
            # open-a-frame-for-the-first-time-using-emacsclient-c-showing-other-buffer-th
            i3-msg "exec emacsclient.emacs24 -c -e '(switch-to-buffer \"AutoVoice\")'"
            sleep 1
        fi
        if [ "$count1" -eq 0 ]; then
            url='chrome-extension://mefllcpfdfhohmeadieejdjcdcbibeml/options.html'
            i3-msg "exec google-chrome --new-window --url ${url}"
            sleep 1
            id=$(xdotool search --onlyvisible --title "AutoVoice Options" | head -1)
            xdotool windowactivate "$id"
            xdotool key 'ctrl+r'
        fi
    fi
}

i3_generic()
{
    group=$1
    case "${group}" in
        # Shell commands.
        (:shell)
        case "$2" in
            (mpv)
            killall mpv
            eval "${@:2}"
            ;;
            (/home/shevek/*/firewall)
            eval "${@:2}"
            ;;
        esac
        ;;
        # Clipboard commands.
        (:clipboard)
        contents="${*:2}"
        # Insert into both clipboards and then paste into Emacs.
        echo "${contents}" | xclip -selection primary     # mouse button 2
        echo "${contents}" | xclip -selection clipboard   # emacs control y
        emacsclient.emacs24 -e "(with-current-buffer \"AutoVoice\" (yank))"
        ;;
    esac
}

#
# Start here.
#

eval  "$1" "${@:2}"

#
# Done.
#
