#!/bin/bash
#

export lmon=HDMI2
export cmon=HDMI1

#
# Enable or disable AutoVoice for Chrome (lAutoInput style).
# chrome://extensions/?id=mefllcpfdfhohmeadieejdjcdcbibeml
#
i3_autovoice()
{
    case "$1" in
        (continuous)
        i3-msg "workspace g9"
        sleep 1
        i3-msg "move workspace to output ${cmon}"
        sleep  1
        i3-msg "exec xdotool mousemove  3180 285 click 1"
        ;;
    esac
}

#
# Monitor the speech-to-text clipboard in a dedicated Emacs buffer.
#
i3_clipboard()
{
    i3-msg "workspace cb"
    sleep 1
    names=$(i3-msg -t get_tree | sed s/,/,\\n/g | grep name)
    str0="Emacs : Clipboard"
    count0="$(echo "${names}" | grep -c "${str0}")"
    if [ "$count0" -eq 0 ]; then
        # https://emacs.stackexchange.com/questions/3463/
        # open-a-frame-for-the-first-time-using-emacsclient-c-showing-other-buffer-th
        i3-msg "exec emacsclient.emacs24 -c -e '(switch-to-buffer \"Clipboard\")'"
        sleep 1
    fi
}

#
#  Shell commands. Clipboard monitoring.
#
i3_generic()
{
    case "$1" in
        # Shell commands. These are reserved for apps like tvheadend.
        (:shell)
        case "$2" in
            (mpv)
            # The subshell allows this script to continue on error
            # should nothing match. The pattern isn't watertight but
            # it only matches the newest instance, so good enough.
            (pkill -n -f 'mpv http') &
            # Brute force to ensure that the 'mp' workspace appears,
            # that the video window opens inside it, that the window
            # has focus, and that the mark is set on its titlebar.
            i3-msg "focus output ${lmon}"
            i3-msg "workspace \"zz\""
            i3-msg "workspace \"mp\""
            i3-msg "exec ${*:2}"
            sleep 10  # Better late than never.
            i3-msg "exec ${HOME}/local/bin/i3-wrapper  --unique-mark"
            ;;
            (/home/shevek/*/firewall)
            eval "${@:2}"
            ;;
        esac
        ;;
        # Autovoice for Chrome.
        (:autovoice)
        i3_autovoice "${*:2}"
        ;;
        # Clipboard commands. The buffer doesn't have to be the
        # current buffer.
        (:clipboard)
        # This assignment could be replaced with a script to process
        # the 'all lower case' text sent from AutoVoice.
        contents="${*:2}"
        # Insert into both clipboards and then paste into Emacs.
        echo "${contents}" | xclip -selection primary     # mouse button 2
        echo "${contents}" | xclip -selection clipboard   # emacs control y
        emacsclient.emacs24 -e "(with-current-buffer \"Clipboard\" (yank))"
        ;;
    esac
}

#
# Start here.
#

eval  "$1" "${@:2}"

#
# Done.
#
