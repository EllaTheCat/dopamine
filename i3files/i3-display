#!/bin/bash
#
# Display off/on.
#
# Requires i3-mouse for setmouse, xdotool.
#

#
# My three monitors were arranged thus: [HDMI2] [HDMI1] [VGA1].
# Use 'xrandr' with no arguments to list monitor names and geometry.
#
lmon=HDMI2
cmon=HDMI1
rmon=VGA

setdisplay ()
{
    # Initialise the "monitor dmenu" to be on monitor number zero.
    [ ! -e  "/dev/shm/$USER/mflag" ] && echo 0 > "/dev/shm/$USER/mflag"
    case "$1" in
        (menu)
        mflag=$(cat "/dev/shm/$USER/mflag")
        list="left on\nleft off\nmiddle on\nmiddle off\nright on\nright off\n"
        item=$(echo -e "cancel\n${list}" | dmenu -b -fn 'pango:DejaVu Sans 11' -m "${mflag}" -p 'Monitors: ')
        [ "${item}" != "cancel" ] && eval "$0 ${item/ /-}"  # "a b" => "ab"
        ;;
        (left-on)
        echo 0 > "/dev/shm/$USER/mflag"
        xrandr --output "${lmon}" --auto --left-of "${cmon}"
        xrandr --output "${lmon}" --brightness 1.0
        ;;
        (left-off)
        echo 0 > "/dev/shm/$USER/mflag"
        xrandr --output "${lmon}" --off
        ;;
        (middle-on)
        echo 0 > "/dev/shm/$USER/mflag"
        xrandr --output "${cmon}" --auto --rightof "${lmon}"
        xrandr --output "${cmon}" --brightness 1.0
        ;;
        (middle-off)
        # Move the dmenu away from the disabled monitor.
        echo 1 > "/dev/shm/$USER/mflag"
        xrandr --output "${cmon}" --off
        ;;
        (right-on)
        echo 0 > "/dev/shm/$USER/mflag"
        xrandr --output "${rmon}" --auto --right-of "${cmon}"
        xrandr --output "${rmon}" --brightness 1.0
        ;;
        (right-off)
        echo 0 > "/dev/shm/$USER/mflag"
        xrandr --output "${rmon}" --off
        ;;
        (siro-off)
        ssh siro vcgencmd display_power 0
        ;;
        (siro-on)
        ssh siro vcgencmd display_power 1
        ;;
    esac
}

setdisplay "$1"

#
# Done.
#
